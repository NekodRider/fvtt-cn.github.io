<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>FoundryVTT 中文社区 – 服务器部署入门</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/</link><description>Recent content in 服务器部署入门 on FoundryVTT 中文社区</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://fvtt-cn.github.io/deployment/gettingstarted/index.xml" rel="self" type="application/rss+xml"/><item><title>Deployment: 云服务器挑选/购买指南</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/cloud/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fvtt-cn.github.io/deployment/gettingstarted/cloud/</guid><description>
&lt;div class="pageinfo pageinfo-primary">
&lt;p>云服务器挑选和购买指南，&lt;em>利益无关&lt;/em>&lt;/p>
&lt;/div>
&lt;h2 id="选购建议">选购建议&lt;/h2>
&lt;h3 id="配置">配置&lt;/h3>
&lt;p>以当前的 FVTT 运行情况看，如果服务器上只运行 FVTT，那么 1G 内存的 Linux 服务器和 2G 内存的 Windows 服务器足够使用。&lt;/p>
&lt;p>CPU 核心数尽管对运行效率有直接影响，但单核心也足以满足多人游玩 FVTT。&lt;/p>
&lt;p>最重要的因素其实是带宽，如果购买 1Mbps 带宽的服务器用来跑 5 个人的团，意味着每个人在游玩时仅能分配到 200 Kbps = 25 KB/s。
如果一个新场景内的地图 2.5M 大小，则所有玩家平均需要等待 100 秒来下载完毕整张地图，更不必提还需要下载其他资源。&lt;/p>
&lt;p>通常认为，运行 FVTT 的服务器带宽最好要在 &lt;strong>5Mbps 以上&lt;/strong>（越高越好）。&lt;/p>
&lt;p>&lt;strong>然而&lt;/strong>，云服务的按带宽计费的价格非常高，如果要提升到 5+Mbps 往往需要远高于其他配置的成本，并且会造成闲时带宽的浪费。如果可以接受按流量计费（每 GB 一般 0.8 元上下），则带宽大小本身不会被计费，可以设置到 100+Mbps，运行 FVTT 绰绰有余。&lt;/p>
&lt;h3 id="系统">系统&lt;/h3>
&lt;p>参见&lt;a href="../#%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%83%A8%E7%BD%B2%E6%96%B9%E5%BC%8F%E5%AF%B9%E6%AF%94">部署方式对比&lt;/a>。&lt;/p>
&lt;p>&lt;em>值得注意的是，Docker 部署方式可使用任意一个主流的 Linux 发行版作为操作系统。&lt;/em>&lt;/p>
&lt;h3 id="地域">地域&lt;/h3>
&lt;p>云服务器的数据中心地理位置可能是最能直接影响体验的 &lt;em>非直观&lt;/em> 要素，需要斟酌。&lt;/p>
&lt;p>数据中心的地理位置，可以决定以下几个重要的判断要素：&lt;/p>
&lt;ul>
&lt;li>网络连接质量
&lt;ul>
&lt;li>墙内玩家占多数，甚至全部都是，那最好选择大陆或者香港的云服务，或者其他 CN2 线路服务器；反之全部都在境外的话，强烈建议选择境外云服务&lt;/li>
&lt;li>如果境内外玩家都有，可以考虑在香港部署，大多数的香港数据中心对境内外的访问质量都还算不错&lt;/li>
&lt;li>考虑玩家时也要注意，FVTT 一次部署可以一直使用。如果一直使用且玩家变动很大，GM 可以只考虑自己的访问质量，或者求助万能的香港&lt;/li>
&lt;li>尽管境内服务器对墙内玩家提供了更优质的访问质量，但同时也因为墙的存在，更难以下载位于境外服务器上的 FVTT 的游戏系统、MOD 等&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>域名、备案
&lt;ul>
&lt;li>境内云服务器上，如果提供有域名的网页服务（直接访问 IP 并使用其他端口除外），则一定需要备案才能访问&lt;/li>
&lt;li>境外（比如香港）的云服务器，不需要备案即可提供域名访问&lt;/li>
&lt;li>如果在境内购买云服务，域名最好在同一家云服务提供商处购买；如果在境外，域名可以在 GoDaddy 或境内的云服务提供商购买&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>价格
&lt;ul>
&lt;li>境内云服务比境外贵不少，配置、带宽的价格都要高&lt;/li>
&lt;li>考虑学生机的价格，如果能购买学生机，价格远比正常购买便宜，但往往会因此只能购买位于境内的固定地理位置的数据中心（参见&lt;a href="#%E5%AD%A6%E7%94%9F%E6%9C%BA">学生机&lt;/a>）&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h3 id="厂商">厂商&lt;/h3>
&lt;p>厂商虽然对使用云服务的体验影响很大，但没必要比较性能（FVTT 不太吃性能），也不必评论谁好谁坏&lt;/p>
&lt;p>主流购买选择：&lt;/p>
&lt;blockquote>
&lt;p>境内：阿里云、腾讯云&lt;/p>
&lt;p>境外：阿里云（香港为主）、 AWS、 Azure、搬瓦工&lt;/p>
&lt;/blockquote>
&lt;h3 id="学生机">学生机&lt;/h3>
&lt;p>阿里云、腾讯云、百度云等等，会对国内学生提供学生优惠。&lt;/p>
&lt;p>这些学生机面向大学生推出，一般年龄不超过 24 岁的用户都可以享受折扣，使得一台单核心 2GB 内存的服务器仅需 10 元/月或更低，拿来开 FVTT 服务器正好。&lt;/p>
&lt;p>但&lt;strong>需要注意&lt;/strong>以下的坑：&lt;/p>
&lt;ul>
&lt;li>带宽：不少学生机默认只给 1Mbps 的带宽，正如上文所提到的那样，用来运行 FVTT 只会让你怀疑人生&lt;/li>
&lt;li>某某云：某某云的学生机目前只有 ARM 架构的 CPU 可选。如果你对 Linux 没有太多使用经验，你可能会怀疑买了假服务器&lt;/li>
&lt;/ul>
&lt;p>一般提到学生机，都会购买国内的。但如果不嫌麻烦的话（需要通过国际学生认证，或教育邮箱认证），国际上的学生优惠，可选项会很多：&lt;/p>
&lt;p>比如通过 GitHub 学生认证，可以获得：&lt;/p>
&lt;ul>
&lt;li>DigitalOcean 学生优惠（送 50 刀，单核 1G 配置，可以购买 10 个月）&lt;/li>
&lt;li>Azure 学生优惠（送 100 刀，单核 1G 配置，可以买香港服务器 9 个月）&lt;/li>
&lt;li>Namecheap 的域名一年&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;p>如果认证无法通过，那境内最好的选择可能就是阿里云轻量应用服务器，简单直接没有别的套路，5Mbps 还算能用，每个月 2T 的流量跑 FVTT 管够。&lt;/p>
&lt;h2 id="购买指南">购买指南&lt;/h2>
&lt;p>待施工&lt;/p>
&lt;h3 id="购买服务器">购买服务器&lt;/h3>
&lt;p>待施工&lt;/p>
&lt;h3 id="购买绑定域名">购买、绑定域名&lt;/h3>
&lt;p>待施工&lt;/p></description></item><item><title>Deployment: Ubuntu 部署 FoundryVTT 教程</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/ubuntu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fvtt-cn.github.io/deployment/gettingstarted/ubuntu/</guid><description>
&lt;p>待施工&lt;/p></description></item><item><title>Deployment: CentOS 部署 FoundryVTT 教程</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/centos/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fvtt-cn.github.io/deployment/gettingstarted/centos/</guid><description/></item><item><title>Deployment: Docker 部署 FoundryVTT 教程</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/docker/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fvtt-cn.github.io/deployment/gettingstarted/docker/</guid><description>
&lt;p>Foundry VTT 目前拥有若干个来自不同用户实现的 Dockerfile，这些实现中，较为推荐 &lt;a href="https://github.com/felddy/foundryvtt-docker">felddy/foundryvtt&lt;/a> 的镜像。&lt;/p>
&lt;h2 id="介绍">介绍&lt;/h2>
&lt;p>目前可以通过中文社区的自动脚本进行容器化部署，也可以手动启动容器。&lt;/p>
&lt;p>在全新购买的云服务器上使用自动脚本进行部署，最少只需要输入 Foundry VTT 站点上的用户名和密码即可完成，同时脚本也包含了后续更新、维护的方法。&lt;/p>
&lt;h3 id="使用-docker-的优点">使用 Docker 的优点&lt;/h3>
&lt;ul>
&lt;li>无需关心系统环境：只要是主流发行版的 Linux，甚至于 Windows 服务器，只要安装了 Docker，即和其他用户的部署行为一致，难以因系统环境问题出错&lt;/li>
&lt;li>直接使用 Docker 的后台管理：Docker 自己会监控容器内运行的进程状态，如果意外情况导致 FVTT 崩溃，可以不需要 pm2 等进程监控工具即可自动重启、还原&lt;/li>
&lt;li>目前主流的 FVTT 的 Docker 镜像包含内置的自动获取下载地址和授权的脚本，可以简化部署流程&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="使用-docker-的缺点">使用 Docker 的缺点&lt;/h3>
&lt;ul>
&lt;li>Docker 本身需要安装，同时拉取镜像、容器本身都消耗了一定冗余的存储空间&lt;/li>
&lt;li>如果使用卷挂载，直接访问 FVTT 的数据文件会变得略困难（可以通过 Docker 启动其他容器简化文件访问）&lt;/li>
&lt;li>目前主流的 FVTT 的 Docker 镜像升级时需要重建，而不能通过 FVTT 内置更新&lt;/li>
&lt;li>&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h2 id="安装流程">安装流程&lt;/h2>
&lt;h3 id="自动部署脚本中文社区-使用教程">自动部署脚本（中文社区） 使用教程&lt;/h3>
&lt;ol>
&lt;li>
&lt;p>首先，假设已经登入了 Linux 服务器，并且能够获得 root 权限&lt;/p>
&lt;/li>
&lt;li>
&lt;p>下载脚本&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">wget https://gitee.com/mitchx7/FoundryDeploy/raw/master/fvtt.sh &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> sudo chmod +x fvtt.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>运行脚本，进行安装&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo ./fvtt.sh
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>安装时会检查是否能获取 root 权限，并且如果没有安装 Docker 会自动安装 Docker&lt;/p>
&lt;p>境内服务器下载镜像时会等待较长时间，可以耐心等待&lt;/p>
&lt;/blockquote>
&lt;p>然后脚本会提示输入参数，每条参数输入完成后回车即可，参数包含（✅：必需 | ⭕：可选）：
&lt;img src="https://fvtt-cn.github.io/images/deployment/docker-script-input.png" alt="">&lt;/p>
&lt;ul>
&lt;li>✅ FVTT 账号&lt;/li>
&lt;li>✅ FVTT 密码&lt;/li>
&lt;li>⭕ 版本号
&lt;ul>
&lt;li>直接回车跳过输入版本号，使用最新稳定版即可&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>⭕ 自定义管理密码
&lt;ul>
&lt;li>安装完成后，如果设置了这个密码，需要使用密码才能管理 FVTT，推荐进行设置；回车跳过就不设置密码&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>⭕ FVTT 绑定域名
&lt;ul>
&lt;li>如果为这台服务器绑定了给 FVTT 使用的域名，可以输入，否则直接回车跳过&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>⭕ 使用 Web 文件管理器
&lt;ul>
&lt;li>为了管理文件方便，建议使用。直接回车跳过设置，默认会使用；如果不使用输入&lt;code>n&lt;/code>再回车&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>⭕ 如果使用 Web 文件管理器，可以绑定域名
&lt;ul>
&lt;li>如果需要给 Web 文件管理器绑定域名进行使用，可以输入，否则直接回车跳过&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>确认输入好的参数之后，便可以回车等待部署完成&lt;/p>
&lt;/li>
&lt;li>
&lt;p>部署完成后，脚本会提示如何访问 FVTT，如图所示：
&lt;img src="https://fvtt-cn.github.io/images/deployment/docker-script-result.png" alt="">&lt;/p>
&lt;/li>
&lt;/ol>
&lt;blockquote>
&lt;p>如上图所示的部署完毕后，如果还是不能访问 FVTT，请参见 FAQ 中的&lt;a href="../../../faq#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%BE%E7%A4%BA%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F%E5%90%8E%E4%BB%8D%E7%84%B6%E6%97%A0%E6%B3%95%E8%BF%9E%E6%8E%A5-foundryvtt">无法连接&lt;/a>的问题&lt;/p>
&lt;/blockquote>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Tips&lt;/h4>
升级 FVTT 或者修改启动配置，请参见&lt;a href="https://github.com/fvtt-cn/FoundryDeploy">脚本仓库&lt;/a>中的文档
&lt;/div>
&lt;hr>
&lt;h3 id="手动运行-fvtt-容器教程">手动运行 FVTT 容器教程&lt;/h3>
&lt;p>&lt;em>手动更适合希望自定义部署步骤，并且不嫌麻烦的用户&lt;/em>&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">注意&lt;/h4>
&lt;strong>手动运行和自动脚本故意设计为会发生冲突，请只选择其中一种方式部署&lt;/strong>
&lt;/div>
&lt;ol>
&lt;li>
&lt;p>首先，假设已经登入了 Linux 服务器，并且能够获得 root 权限&lt;/p>
&lt;/li>
&lt;li>
&lt;p>确保 Docker 已安装，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">curl -fsSL https://get.docker.com &lt;span style="color:#000;font-weight:bold">|&lt;/span> sudo sh
&lt;/code>&lt;/pre>&lt;/div>&lt;p>等待执行完毕就可以进入下一步&lt;/p>
&lt;/li>
&lt;li>
&lt;p>先创建一个 Docker 网桥，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker network create caddy_network
&lt;/code>&lt;/pre>&lt;/div>&lt;p>修改下面的命令，然后复制粘贴后执行&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker run -d &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>fvtt &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--restart&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unless-stopped &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--network&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>caddy_network &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-v fvtt_data:/data &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;FVTT官网用户名&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;FVTT官网密码&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_ADMIN_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;设置一个部署完成后管理FVTT的密码&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>felddy/foundryvtt:release
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>需要注意的是，之后访问 FVTT 不要使用任何服务器设置功能来更改选项，会被现在的设置直接覆盖（包括 FVTT 管理密码，但保存的世界、系统、MOD 等等不受影响）&lt;/p>
&lt;p>并且已经屏蔽自动升级功能，需要升级或者修改服务器其他设置的话参见下文（访问域名、端口等修改 Caddy 配置）&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>启动 Caddy
使用 Caddy 作为反代，可以有效降低的 HTTPS 的部署成本，毕竟全自动申请免费的 LetsEncrypt 的 HTTPS 证书且自动更新，无需额外配置&lt;/p>
&lt;p>先绑定好域名，假设绑定到这台机器的域名的是 &lt;code>my.fvtt.com&lt;/code>&lt;/p>
&lt;p>那么执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nano Caddyfile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后会进入一个编辑文件的界面，在这个界面里，写下 Caddy 的配置文件，可以修改 &lt;code>my.fvtt.com&lt;/code> 后直接复制粘贴，示例如下：&lt;/p>
&lt;pre>&lt;code class="language-Caddyfile" data-lang="Caddyfile">my.fvtt.com &amp;lt;= 修改这个 {
reverse_proxy fvtt:30000 {
header_up Host {host}
header_up X-Real-IP {remote_host}
header_up X-Forwarded-For {remote_host}
header_up X-Forwarded-Proto {scheme}
}
}
&lt;/code>&lt;/pre>&lt;p>无论是否有域名，输入或者粘贴完毕后，按 &lt;code>Ctrl+X&lt;/code>，会提示是否覆写编辑内容，按 &lt;code>y&lt;/code> 并且回车确认保存&lt;/p>
&lt;p>接着启动 Caddy 进行反代，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker run -d &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>caddy &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--restart&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unless-stopped &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--network&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>caddy_network &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-p 80:80 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-p 443:443 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-p 8080:8080 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-v cdata:/data &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-v &lt;span style="color:#000">$PWD&lt;/span>/Caddyfile:/etc/caddy/Caddyfile &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>caddy
&lt;/code>&lt;/pre>&lt;/div>&lt;p>启动后等待不到几秒后（大部分情况下），就应该已经可以访问 FVTT 了，直接在浏览器输入绑定的域名就可以&lt;/p>
&lt;/li>
&lt;li>
&lt;p>启动 FileBrowser（可选）&lt;/p>
&lt;p>我们都知道 FoundryVTT 目前的文件管理非常的麻，比如暂不支持删除、移动等等必需功能&lt;/p>
&lt;p>如果你本来用 Windows Server 部署，那么你还可以远程桌面来试图管理（其实也不是特别方便），如果你使用 Linux 并且像上面一样使用 Docker 来部署，那么就不要考虑直接在用命令移动、删除文件了&lt;/p>
&lt;p>为了解决这个问题，最好的方法是启动一个 Web 文件管理器的 Docker 容器，让它挂载我们的 FVTT 的数据文件，然后我们用浏览器打开这个 Web 文件管理器就可以方便地管理文件&lt;/p>
&lt;p>这里推荐使用基于 Golang 的 FileBrowser，使用足够方便：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker run -d &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>filebrowser &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--restart&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unless-stopped &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--network&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>caddy_network &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-v fvtt_data:/srv &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>filebrowser/filebrowser
&lt;/code>&lt;/pre>&lt;/div>&lt;p>建议再给这台运行 FVTT 的机器绑定一个新的域名用于访问文件管理器，例如 &lt;code>file.fvtt.com&lt;/code>，然后修改 Caddyfile 让 Caddy 也反代 FileBrowser，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nano Caddyfile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后用方向键调整到末尾，可以修改 &lt;code>file.fvtt.com&lt;/code> 后直接粘贴到文件末尾，示例如下：&lt;/p>
&lt;pre>&lt;code class="language-Caddyfile" data-lang="Caddyfile">file.fvtt.com {
reverse_proxy filebrowser:80 {
header_up Host {host}
header_up X-Real-IP {remote_host}
header_up X-Forwarded-For {remote_host}
header_up X-Forwarded-Proto {scheme}
}
}
&lt;/code>&lt;/pre>&lt;p>同样在输入或者粘贴完毕后，按 &lt;code>Ctrl+X&lt;/code> 然后按 &lt;code>y&lt;/code> 并且回车确认保存&lt;/p>
&lt;p>接着，重启 Caddy 以使其启用对 FileBrowser 的反代：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker restart caddy
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>升级 FVTT 版本或者修改配置
先移除正在运行的 FVTT 的容器，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker rm -f fvtt
&lt;/code>&lt;/pre>&lt;/div>&lt;p>并且更新 FVTT 镜像，执行：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker pull felddy/foundryvtt:release
&lt;/code>&lt;/pre>&lt;/div>&lt;p>然后执行和启动时一模一样的命令：&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo docker run -d &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--name&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>fvtt &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--restart&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unless-stopped &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>--network&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>caddy_network &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-v fvtt_data:/data &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;FVTT官网用户名&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;FVTT官网密码&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>-e &lt;span style="color:#000">FOUNDRY_ADMIN_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;设置一个部署完成后管理FVTT的密码&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;span style="color:#4e9a06">&lt;/span>felddy/foundryvtt:release
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol></description></item><item><title>Deployment: Windows 部署 FoundryVTT 教程</title><link>https://fvtt-cn.github.io/deployment/gettingstarted/windows/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fvtt-cn.github.io/deployment/gettingstarted/windows/</guid><description>
&lt;p>待施工&lt;/p></description></item></channel></rss>